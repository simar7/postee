version: v0.1
type: controller

name: Postee-CA-Demo
input: contains(input.SigMetadata.ID, "TRC-2")
jobs:
  "Kill bad process, send logs job":
    runs-on: "postee-runner-1"
    steps:
      - name: "Kill bad process"
        uses-action: "my-kill-exec-action"
        type: exec
        with:
          env: "MY_ENV_VAR=foo_bar_baz, MY_KEY=secret"     # Optional. Any environment variables to pass in
          exec-script: |
            #!/bin/sh
            kill -SIGTERM event.input.SigMetadata.ProcessName

      - name: "Send logs"
        uses-action: "my-http-post-action"
        type: exec
        with:
          url: "https://my-fancy-url.com"       # Required. URL of the HTTP Request
          method: POST                          # Required. Method to use. CONNECT is not supported at this time
          headers: "foo=bar, haz=baz"            # Optional. Headers to pass in for the request.
          timeout: 10s                          # Optional. Timeout value in XX(s,m,h)
          body-content: |                       
            This is an example of a inline body
            Event ID: event.input.Signature.ID

  "Send notification messages":
    runs-on: "postee-runner-2"
    parallelize: true
    steps:
    - name: "Send slack message"
      uses-action: "my-slack-action"
      type: slack
      with:
        url: https://hooks.slack.com/services/TAAAA/BBB/<key>

  "Inform on-call staff":
    runs-on: "self"                     # self is a special keyword to identify itself, default: self
    steps:
    - name: "Create JIRA ticket"
      uses-action: "my-jira-ticket-action"
      type: jira
      with:
        url: "foo.atlassian.com"            # Mandatory. E.g "https://johndoe.atlassian.net"
        user: "johndoe@example.com"          # Mandatory. E.g :johndoe@gmail.com"
        project-key:  "PRJ"  # Mandatory. Specify the JIRA product key

    - name: "Page on-call engineer"
      uses-action: "my-pagerduty-action"
      type: pagerduty
      with:
        api-key: "hunter123"
        severity: "SEV-1"


#aqua-server:            #  URL of Aqua Server for links. E.g. https://myserver.aquasec.com
#max-db-size: 1000MB       #  Max size of DB. <numbers><unit suffix> pattern is used, such as "300MB" or "1GB". If empty or 0 then unlimited
#db-verify-interval: 1   #  How often to check the DB size. By default, Postee checks every 1 hour
#routes:
#- name: actions-route
#  runners: [postee-runner-1, postee-runner-2]
#  input: contains(input.SigMetadata.ID, "TRC-2")
#  serialize-outputs: true                       # Optional. Serialize outputs in route.
#  outputs: [action.exec.one, action.exec.two, action.http.get, action.http.post]
#  template: raw-json

# Templates are used to format a message
#templates:
#- name: raw-json                        # route message "As Is" to external webhook
#  rego-package: postee.rawmessage.json
#
## Runners are used to define all current runner configurations
#runners:
#- name: postee-runner-1
#  input: contains(input.SigMetadata.ID, "TRC-2")
#  serialize-actions: true
#  actions: [my-exec-action, my-http-post-action]
#  template: raw-json
#
#- name: postee-runner-2
#  input: contains(input.SigMetadata.ID, "TRC-2")
#  actions: [my-slack-action]
#  template: raw-json

